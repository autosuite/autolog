"use strict";
/**
 * This file tests the methods for the exportable [[SemVer]] type.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var jest_each_1 = __importDefault(require("jest-each"));
var index_1 = require("../index");
globals_1.describe("SemVer.constructFromText (nominal)", function () {
    jest_each_1.default([
        /* SemVers with some extremes, some zeroes, and no info strings. */
        ["0.1.5", 0, 1, 5, null],
        ["912418.0.12419", 912418, 0, 12419, null],
        ["00.00124.0124", 0, 124, 124, null],
        ["3.31.12412", 3, 31, 12412, null],
        ["0.0.124192412", 0, 0, 124192412, null],
        ["0.0.0", 0, 0, 0, null],
        /* SemVers with info strings. */
        ["0.10.5-rc2", 0, 10, 5, "-rc2"],
        ["123.456.789-rc2+build2", 123, 456, 789, "-rc2+build2"],
        ["124124.1110.512-rc5+2020-06-25", 124124, 1110, 512, "-rc5+2020-06-25"],
        ["0001.10.22-invalid but supported", 1, 10, 22, "-invalid but supported"],
        ["0432.1098.5124-14uua(*!@Y*&", 432, 1098, 5124, "-14uua(*!@Y*&"],
    ]).it("when the input is '%s'", function (text, expectedMajor, expectedMinor, expectedPatch, expectedInfo) {
        var version = index_1.SemVer.constructFromText(text);
        globals_1.expect(version.major).toBe(expectedMajor);
        globals_1.expect(version.minor).toBe(expectedMinor);
        globals_1.expect(version.patch).toBe(expectedPatch);
        globals_1.expect(version.info).toBe(expectedInfo);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VtdmVyLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvX190ZXN0X18vc2VtdmVyLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOzs7OztBQUVILHlDQUFpRDtBQUVqRCx3REFBNkI7QUFFN0Isa0NBQWtDO0FBRWxDLGtCQUFRLENBQUMsb0NBQW9DLEVBQUU7SUFDM0MsbUJBQUksQ0FBQztRQUNELG1FQUFtRTtRQUVuRSxDQUFDLE9BQU8sRUFBVyxDQUFDLEVBQVEsQ0FBQyxFQUFJLENBQUMsRUFBVSxJQUFJLENBQUM7UUFDakQsQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUcsQ0FBQyxFQUFJLEtBQUssRUFBTSxJQUFJLENBQUM7UUFDakQsQ0FBQyxlQUFlLEVBQUcsQ0FBQyxFQUFRLEdBQUcsRUFBRSxHQUFHLEVBQVEsSUFBSSxDQUFDO1FBQ2pELENBQUMsWUFBWSxFQUFNLENBQUMsRUFBUSxFQUFFLEVBQUcsS0FBSyxFQUFNLElBQUksQ0FBQztRQUNqRCxDQUFDLGVBQWUsRUFBRyxDQUFDLEVBQVEsQ0FBQyxFQUFJLFNBQVMsRUFBRSxJQUFJLENBQUM7UUFDakQsQ0FBQyxPQUFPLEVBQVcsQ0FBQyxFQUFRLENBQUMsRUFBSSxDQUFDLEVBQVUsSUFBSSxDQUFDO1FBRWpELGdDQUFnQztRQUVoQyxDQUFDLFlBQVksRUFBNEIsQ0FBQyxFQUFLLEVBQUUsRUFBTSxDQUFDLEVBQUcsTUFBTSxDQUFtQjtRQUNwRixDQUFDLHdCQUF3QixFQUFjLEdBQUcsRUFBSSxHQUFHLEVBQUksR0FBRyxFQUFHLGFBQWEsQ0FBWTtRQUNwRixDQUFDLGdDQUFnQyxFQUFHLE1BQU0sRUFBRyxJQUFJLEVBQUksR0FBRyxFQUFHLGlCQUFpQixDQUFRO1FBQ3BGLENBQUMsa0NBQWtDLEVBQU0sQ0FBQyxFQUFLLEVBQUUsRUFBSyxFQUFFLEVBQUcsd0JBQXdCLENBQUM7UUFDcEYsQ0FBQyw2QkFBNkIsRUFBUyxHQUFHLEVBQUcsSUFBSSxFQUFHLElBQUksRUFBRyxlQUFlLENBQVU7S0FDdkYsQ0FBQyxDQUFDLEVBQUUsQ0FDRCx3QkFBd0IsRUFBRSxVQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxZQUFZO1FBQ3RGLElBQU0sT0FBTyxHQUFXLGNBQU0sQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2RCxnQkFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDMUMsZ0JBQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzFDLGdCQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMxQyxnQkFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDLENBQUM7QUFDWCxDQUFDLENBQUMsQ0FBQyJ9